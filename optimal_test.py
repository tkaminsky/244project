import pandas
import numpy as np
import random
import matplotlib.pyplot as plt
import itertools

optimal_y = [0.0086420138, 0.0041398923, 0.0028877419, 0.0021812047, 0.0017807626, 0.0011584304, 0.0009399769, 0.0005173429, 0.0002453162, 0.0001406485, 0.0001110630, 0.0000000000]
random_y = [0.0174416705, 0.0075955071, 0.0054190938, 0.0036257101, 0.0031078746, 0.0019968743, 0.0016308261, 0.0007454529, 0.0003059275, 0.0001501471, 0.0001112387, 0.0000000000]

y_opt = [0.0120361460, 0.0104250815, 0.0094236352, 0.0081671092, 0.0074379010, 0.0070585578, 0.0061356513, 0.0058546545,
        0.0054230047, 0.0051892924, 0.0049998062, 0.0046979531, 0.0043858421, 0.0042665172, 0.0040320621, 0.0039085934,
        0.0036781691, 0.0034998984, 0.0034752934, 0.0033311513, 0.0031450476, 0.0030892755, 0.0029625486, 0.0028765867,
 0.0027923034, 0.0026959835, 0.0026479353, 0.0025799881, 0.0024795587, 0.0024051076, 0.0023489779, 0.0022995114,
 0.0022644998, 0.0021591132, 0.0021635733, 0.0021108193, 0.0020580072, 0.0019977153, 0.0019609385, 0.0019174549,
 0.0018693925, 0.0018391214, 0.0018231361, 0.0017979635, 0.0017397917, 0.0017027451, 0.0016902628, 0.0016603006,
 0.0016328730, 0.0016059222, 0.0015907967, 0.0015419912, 0.0015238138, 0.0015055724, 0.0014857889, 0.0014682857,
 0.0014348455, 0.0014142506, 0.0014009228, 0.0013784667, 0.0013706015, 0.0013412623, 0.0013225044, 0.0012953447,
 0.0012806130, 0.0012827273, 0.0012539538, 0.0012467436, 0.0012291576, 0.0012071238, 0.0011919535, 0.0011795519,
 0.0011660608, 0.0011560768, 0.0011414058, 0.0011285862, 0.0011142950, 0.0011120501, 0.0010900763, 0.0010846705,
 0.0010619325, 0.0010566793, 0.0010476532, 0.0010343874, 0.0010345965, 0.0010167658, 0.0010036847, 0.0009926625,
 0.0009886212, 0.0009811352, 0.0009739984, 0.0009583465, 0.0009510641, 0.0009482792, 0.0009309687, 0.0009226951,
 0.0009188797, 0.0009103246, 0.0009052672, 0.0008949524, 0.0008895226, 0.0008798685, 0.0008739172, 0.0008682777,
 0.0008565904, 0.0008535487, 0.0008459647, 0.0008384011, 0.0008320957, 0.0008249960, 0.0008186316, 0.0008155395,
 0.0008061308, 0.0008027640, 0.0007976661, 0.0007907398, 0.0007842572, 0.0007801838, 0.0007753137, 0.0007693586,
 0.0007624792, 0.0007585804, 0.0007537381, 0.0007471718, 0.0007461857, 0.0007365507, 0.0007369244, 0.0007312415,
 0.0007233229, 0.0007189075, 0.0007199579, 0.0007083260, 0.0007091101, 0.0007036842, 0.0007002447, 0.0006901399,
 0.0006923105, 0.0006845718, 0.0006815753, 0.0006767609, 0.0006751067, 0.0006675940, 0.0006677242, 0.0006605707,
 0.0006593164, 0.0006551503, 0.0006492125, 0.0006497182, 0.0006391440, 0.0006419665, 0.0006396794, 0.0006319282,
 0.0006267798, 0.0006266198, 0.0006223353, 0.0006219650, 0.0006147220, 0.0006117927, 0.0006095665, 0.0006073444,
 0.0006061927, 0.0005965731, 0.0005964529, 0.0005958021, 0.0005899010, 0.0005891889, 0.0005849687, 0.0005818171,
 0.0005798384, 0.0005754706, 0.0005734865, 0.0005725992, 0.0005668969, 0.0005691310, 0.0005659685, 0.0005662566,
 0.0005593312, 0.0005589540, 0.0005521708, 0.0005509838, 0.0005475599, 0.0005453663, 0.0005419531, 0.0005455077,
 0.0005362186, 0.0005377105, 0.0005369788, 0.0005351260, 0.0005318588, 0.0005298926, 0.0005272708, 0.0005250105,
 0.0005249529, 0.0005185695, 0.0000000000]

y_rand = [0.0288780641, 0.0289734005, 0.0164355759, 0.0183198789, 0.0159731713, 0.0132466991, 0.0146418180, 0.0091842417,
 0.0110594478, 0.0119205914, 0.0079756887, 0.0081443136, 0.0091583837, 0.0097405997, 0.0081918254, 0.0097075029,
 0.0085659947, 0.0066042836, 0.0067805294, 0.0063968260, 0.0068688930, 0.0055215006, 0.0066636786, 0.0048262036,
 0.0055462294, 0.0044502885, 0.0051418981, 0.0068233814, 0.0048660454, 0.0046844735, 0.0044586422, 0.0043957521,
 0.0040409062, 0.0042770493, 0.0037420809, 0.0037291115, 0.0039373341, 0.0035214231, 0.0037105254, 0.0030848444,
 0.0030500866, 0.0033612564, 0.0032826766, 0.0034761919, 0.0029274397, 0.0033167979, 0.0031235835, 0.0029272766,
 0.0026931706, 0.0027277648, 0.0025501742, 0.0027451776, 0.0025470328, 0.0025743790, 0.0026097842, 0.0023576615,
 0.0023747921, 0.0023878122, 0.0023357656, 0.0023318808, 0.0025379455, 0.0019620065, 0.0024640494, 0.0022154128,
 0.0021039848, 0.0022877277, 0.0023066543, 0.0019474207, 0.0022008991, 0.0018302902, 0.0018440796, 0.0019979026,
 0.0022173597, 0.0018053789, 0.0019261952, 0.0017984391, 0.0019522252, 0.0017836262, 0.0017394316, 0.0017244843,
 0.0017360491, 0.0016699646, 0.0017742744, 0.0020752781, 0.0017822315, 0.0016937634, 0.0016619035, 0.0016554900,
 0.0015367536, 0.0015769179, 0.0014806459, 0.0014727110, 0.0014367019, 0.0015564727, 0.0014308584, 0.0013888120,
 0.0013687231, 0.0015238647, 0.0015026750, 0.0013949373, 0.0014852634, 0.0014621648, 0.0014557731, 0.0013000974,
 0.0013079429, 0.0014306627, 0.0013310869, 0.0013448739, 0.0012872109, 0.0013432985, 0.0012418919, 0.0013253914,
 0.0011699378, 0.0013098810, 0.0012809316, 0.0011933542, 0.0012521153, 0.0010645691, 0.0012145562, 0.0013134311,
 0.0011539476, 0.0011918031, 0.0012253613, 0.0011230529, 0.0011268553, 0.0011540753, 0.0011056571, 0.0011033245,
 0.0010652251, 0.0011277635, 0.0010741053, 0.0010785549, 0.0010087219, 0.0009943972, 0.0010752378, 0.0009676462,
 0.0010426849, 0.0010093226, 0.0010023490, 0.0010422758, 0.0010018194, 0.0010580722, 0.0010792671, 0.0009938679,
 0.0009772449, 0.0009814364, 0.0010296835, 0.0010000447, 0.0009471363, 0.0009284078, 0.0009685852, 0.0009249191,
 0.0009445150, 0.0009212071, 0.0009936366, 0.0009126865, 0.0008808466, 0.0009312991, 0.0009480002, 0.0009225653,
 0.0008662848, 0.0008718022, 0.0008693473, 0.0008873532, 0.0008663075, 0.0008992202, 0.0009157296, 0.0008647337,
 0.0008450342, 0.0008420129, 0.0007721889, 0.0008799377, 0.0008048610, 0.0008709013, 0.0008583442, 0.0008061691,
 0.0007820657, 0.0008193171, 0.0008047131, 0.0008011356, 0.0007761704, 0.0007617861, 0.0008495791, 0.0007946189,
 0.0007664557, 0.0008174101, 0.0007994158, 0.0007583176, 0.0007036241, 0.0007762677, 0.0007715483, 0.0008421916,
0.0007728728, 0.0007545498, 0.0000000000]



x = [6,10,20,30,40,50,80, 100, 200,500,1000, 1335]
x = range(6, 201, 1)

# Create a line plot of the two ys against the x
plt.plot(x, y_rand, label='Random')
plt.plot(x, y_opt, label='Optimal')

# Add a legend
plt.legend()

# Add a title
plt.title('Determinant vs. Subset Size')
plt.xlabel('Subset Size')
plt.ylabel('Determinant')

plt.show()